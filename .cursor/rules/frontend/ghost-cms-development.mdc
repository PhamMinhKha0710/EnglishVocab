# Ghost CMS Theme Development

This document outlines best practices and patterns for developing Ghost CMS themes with Handlebars, Alpine.js, and Tailwind CSS.

## Ghost Theme Structure

Follow the recommended Ghost theme structure:

```
theme-name/
├── assets/
│   ├── css/
│   │   └── screen.css
│   ├── js/
│   │   └── main.js
│   └── images/
├── partials/
│   ├── header.hbs
│   ├── footer.hbs
│   ├── navigation.hbs
│   └── components/
│       ├── post-card.hbs
│       └── newsletter-form.hbs
├── post.hbs
├── page.hbs
├── index.hbs
├── default.hbs
├── tag.hbs
├── author.hbs
├── error.hbs
├── routes.yaml
└── package.json
```

## Handlebars Templates

### Component Development

Create reusable components using Handlebars partials:

```handlebars
{{!-- partials/components/post-card.hbs --}}
<article class="group relative flex flex-col rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 overflow-hidden">
  {{#if feature_image}}
    <div class="aspect-w-16 aspect-h-9 w-full bg-gray-100">
      <img 
        class="object-cover w-full h-full" 
        src="{{img_url feature_image size="medium"}}"
        alt="{{#if feature_image_alt}}{{feature_image_alt}}{{else}}{{title}}{{/if}}"
        loading="lazy"
      >
    </div>
  {{/if}}
  
  <div class="flex flex-col flex-grow p-5">
    {{#primary_tag}}
      <span class="text-sm font-medium text-blue-600 mb-2">{{name}}</span>
    {{/primary_tag}}
    
    <h2 class="text-xl font-bold mb-3 group-hover:text-blue-600 transition-colors duration-200">
      <a href="{{url}}" class="stretched-link" aria-label="Read {{title}}">
        {{title}}
      </a>
    </h2>
    
    <p class="text-gray-600 mb-4 line-clamp-3">{{excerpt}}</p>
    
    <div class="flex items-center mt-auto">
      {{#if primary_author.profile_image}}
        <img 
          class="w-10 h-10 rounded-full mr-3" 
          src="{{img_url primary_author.profile_image size="xs"}}" 
          alt="{{primary_author.name}}'s profile picture"
        >
      {{/if}}
      <div>
        <span class="block font-medium">{{primary_author.name}}</span>
        <time class="text-sm text-gray-500" datetime="{{date format="YYYY-MM-DD"}}">{{date format="MMMM DD, YYYY"}}</time>
      </div>
    </div>
  </div>
</article>
```

## Routing and Templates

Implement custom routes using routes.yaml:

```yaml
routes:
  /featured/:
    permalink: /featured/
    template: featured
    filter: featured:true
  /newsletter/:
    permalink: /newsletter/
    template: newsletter
    content_type: page
  /podcast/:
    controller: channel
    filter: tag:podcast
    template: podcast
    data: page.podcast
```

## Content Management

Leverage Ghost's content API for dynamic content:

```handlebars
{{!-- Featured posts section --}}
<section class="py-12 bg-gray-50">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold mb-8">Featured Content</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {{#get "posts" filter="featured:true" limit="3" include="authors,tags"}}
        {{#foreach posts}}
          {{> "components/post-card"}}
        {{/foreach}}
      {{else}}
        <p class="text-gray-600 col-span-full">No featured posts available.</p>
      {{/get}}
    </div>
  </div>
</section>
```

## Integrating Alpine.js and Tailwind

Example of integrating Alpine.js for dynamic behavior:

```handlebars
{{!-- default.hbs --}}
<!DOCTYPE html>
<html lang="{{@site.locale}}">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{meta_title}}</title>
  <link rel="stylesheet" href="{{asset "built/screen.css"}}">
  {{ghost_head}}
</head>
<body class="flex flex-col min-h-screen bg-white">
  {{> header}}

  <main class="flex-grow">
    {{{body}}}
  </main>

  {{> footer}}

  <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
  <script src="{{asset "built/main.js"}}"></script>
  {{ghost_foot}}
</body>
</html>
```

Example of a search component using Alpine.js:

```handlebars
{{!-- partials/components/search.hbs --}}
<div
  x-data="{
    searchOpen: false,
    searchQuery: '',
    searchResults: [],
    loading: false,
    
    init() {
      this.$watch('searchQuery', (value) => {
        if (value.length > 2) {
          this.performSearch();
        } else {
          this.searchResults = [];
        }
      });
    },
    
    performSearch() {
      this.loading = true;
      fetch(`/ghost/api/v3/content/posts/?key={{@site.content_api_key}}&limit=5&fields=title,slug,feature_image&filter=visibility:public+tag:-hash-{{visibility hash='public'}}+slug:-${this.searchQuery}*`)
        .then(res => res.json())
        .then(data => {
          this.searchResults = data.posts || [];
          this.loading = false;
        })
        .catch(err => {
          console.error('Search error:', err);
          this.loading = false;
        });
    },
    
    closeSearch() {
      this.searchOpen = false;
      this.searchQuery = '';
      this.searchResults = [];
    }
  }"
  @keydown.escape.window="closeSearch()"
  class="relative"
>
  <button 
    @click="searchOpen = true; $nextTick(() => $refs.searchInput.focus())"
    class="flex items-center text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded-md"
    aria-label="Search"
    tabindex="0"
  >
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
    </svg>
    <span class="ml-2 hidden md:inline">Search</span>
  </button>

  <div 
    x-show="searchOpen" 
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 transform scale-95"
    x-transition:enter-end="opacity-100 transform scale-100"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 transform scale-100"
    x-transition:leave-end="opacity-0 transform scale-95"
    class="absolute right-0 top-10 w-screen max-w-md bg-white rounded-lg shadow-lg p-6 z-50"
    @click.away="closeSearch()"
  >
    <div class="flex items-center border-b border-gray-200 pb-4">
      <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
      </svg>
      <input 
        x-ref="searchInput"
        x-model.debounce.300ms="searchQuery"
        type="text" 
        placeholder="Search articles..." 
        class="ml-2 flex-1 focus:outline-none"
        aria-label="Search articles"
      >
      <button 
        @click="closeSearch()"
        class="ml-2 text-gray-500 hover:text-gray-900 focus:outline-none"
        aria-label="Close search"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <div class="mt-4">
      <div x-show="loading" class="text-center py-4">
        <div class="inline-block animate-spin rounded-full h-6 w-6 border-2 border-gray-300 border-t-blue-600"></div>
      </div>
      
      <template x-if="!loading && searchQuery.length > 2">
        <div>
          <template x-if="searchResults.length === 0">
            <p class="text-gray-500 text-center py-4">No results found for "<span x-text="searchQuery"></span>"</p>
          </template>
          
          <ul class="divide-y divide-gray-200">
            <template x-for="result in searchResults" :key="result.id">
              <li class="py-3">
                <a :href="result.slug" class="flex items-center hover:bg-gray-50 p-2 rounded-md">
                  <template x-if="result.feature_image">
                    <img :src="result.feature_image" class="w-12 h-12 object-cover rounded" :alt="result.title">
                  </template>
                  <span x-text="result.title" class="ml-3 font-medium text-gray-900"></span>
                </a>
              </li>
            </template>
          </ul>
        </div>
      </template>
    </div>
  </div>
</div>
```

## Tailwind CSS Integration

Configure Tailwind for Ghost theme:

```javascript
// tailwind.config.js
module.exports = {
  content: [
    './assets/**/*.js',
    './**/*.hbs'
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#f0f9ff',
          100: '#e0f2fe',
          500: '#0ea5e9',
          600: '#0284c7',
          700: '#0369a1',
        },
      },
      typography: theme => ({
        DEFAULT: {
          css: {
            a: {
              color: theme('colors.primary.600'),
              '&:hover': {
                color: theme('colors.primary.700'),
              },
            },
            h2: {
              marginTop: '1.5em',
            },
          },
        },
      }),
    },
  },
  plugins: [
    require('@tailwindcss/typography'),
    require('@tailwindcss/aspect-ratio'),
    require('@tailwindcss/forms'),
    require('@tailwindcss/line-clamp'),
  ],
}
```

## Membership and Subscription Features

Implementing a newsletter signup form:

```handlebars
{{!-- partials/components/newsletter-form.hbs --}}
<div class="bg-gray-50 rounded-lg p-6">
  <div class="text-center mb-4">
    <h3 class="text-xl font-bold mb-2">Subscribe to our newsletter</h3>
    <p class="text-gray-600">Get the latest posts delivered right to your inbox</p>
  </div>
  
  <div
    x-data="{ 
      email: '', 
      submitting: false,
      success: false,
      error: null,
      
      submitForm() {
        if (!this.email || this.submitting) return;
        
        this.submitting = true;
        this.error = null;
        
        fetch('/members/api/send-magic-link/', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ 
            email: this.email,
            emailType: 'subscribe'
          })
        })
        .then(res => {
          if (res.ok) {
            this.success = true;
          } else {
            throw new Error('Subscription failed');
          }
        })
        .catch(err => {
          this.error = 'Could not subscribe. Please try again.';
          console.error(err);
        })
        .finally(() => {
          this.submitting = false;
        });
      }
    }"
  >
    <form x-show="!success" @submit.prevent="submitForm()" class="flex flex-col sm:flex-row gap-3">
      <label for="newsletter-email" class="sr-only">Email address</label>
      <input
        x-model="email"
        id="newsletter-email"
        type="email"
        placeholder="Your email address"
        required
        class="flex-1 px-4 py-2 rounded-md border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:outline-none"
      >
      <button
        type="submit"
        x-bind:disabled="submitting"
        class="px-4 py-2 bg-blue-600 text-white rounded-md font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50"
        x-text="submitting ? 'Subscribing...' : 'Subscribe'"
      ></button>
    </form>
    
    <div x-show="success" class="text-center py-4">
      <svg class="w-10 h-10 text-green-500 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <p class="font-medium text-lg">Great! Check your inbox to confirm.</p>
    </div>
    
    <div x-show="error" class="text-red-600 text-center mt-3" x-text="error"></div>
  </div>
</div>
```

## SEO and Meta Tags

Implementing proper SEO meta tags:

```handlebars
{{!-- partials/meta-tags.hbs --}}
{{! Primary Meta Tags }}
<meta name="title" content="{{meta_title}}">
<meta name="description" content="{{meta_description}}">

{{! Open Graph / Facebook }}
<meta property="og:type" content="website">
<meta property="og:url" content="{{url absolute="true"}}">
<meta property="og:title" content="{{meta_title}}">
<meta property="og:description" content="{{meta_description}}">
{{#if feature_image}}
  <meta property="og:image" content="{{img_url feature_image size="large"}}">
{{else}}
  <meta property="og:image" content="{{@site.cover_image}}">
{{/if}}

{{! Twitter }}
<meta property="twitter:card" content="summary_large_image">
<meta property="twitter:url" content="{{url absolute="true"}}">
<meta property="twitter:title" content="{{meta_title}}">
<meta property="twitter:description" content="{{meta_description}}">
{{#if feature_image}}
  <meta property="twitter:image" content="{{img_url feature_image size="large"}}">
{{else}}
  <meta property="twitter:image" content="{{@site.cover_image}}">
{{/if}}

{{#is "post"}}
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Article",
      "headline": "{{title}}",
      "author": {
        "@type": "Person",
        "name": "{{primary_author.name}}"
      },
      "publisher": {
        "@type": "Organization",
        "name": "{{@site.title}}",
        "logo": {
          "@type": "ImageObject",
          "url": "{{img_url @site.logo}}"
        }
      },
      "datePublished": "{{date format="YYYY-MM-DDTHH:mm:ssZ"}}",
      {{#if updated_at}}
      "dateModified": "{{updated_at format="YYYY-MM-DDTHH:mm:ssZ"}}",
      {{else}}
      "dateModified": "{{date format="YYYY-MM-DDTHH:mm:ssZ"}}",
      {{/if}}
      "mainEntityOfPage": "{{url absolute="true"}}",
      "image": "{{img_url feature_image}}"
    }
  </script>
{{/is}}
```

## Performance Optimization

Implement proper asset loading strategies:

```handlebars
{{!-- default.hbs - optimized asset loading --}}
<!DOCTYPE html>
<html lang="{{@site.locale}}">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{meta_title}}</title>
  
  {{!-- Critical CSS inline --}}
  <style>
    /* Critical CSS goes here */
    body { font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; margin: 0; }
    .header { padding: 1rem; background: white; box-shadow: 0 1px 2px 0 rgba(0,0,0,0.05); }
    /* ... more critical styles ... */
  </style>
  
  {{!-- Preload important resources --}}
  <link rel="preload" href="{{asset "fonts/inter-var.woff2"}}" as="font" type="font/woff2" crossorigin>
  
  {{!-- Defer non-critical CSS --}}
  <link rel="preload" href="{{asset "built/screen.css"}}" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="{{asset "built/screen.css"}}"></noscript>
  
  {{> "meta-tags"}}
  {{ghost_head}}
</head>
<body class="flex flex-col min-h-screen bg-white">
  {{> header}}

  <main class="flex-grow">
    {{{body}}}
  </main>

  {{> footer}}

  {{!-- Defer non-critical scripts --}}
  <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
  <script src="{{asset "built/main.js"}}" defer></script>
  
  {{!-- Lazy load images --}}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var lazyImages = [].slice.call(document.querySelectorAll('img.lazy'));
      
      if ('IntersectionObserver' in window) {
        let lazyImageObserver = new IntersectionObserver(function(entries, observer) {
          entries.forEach(function(entry) {
            if (entry.isIntersecting) {
              let lazyImage = entry.target;
              lazyImage.src = lazyImage.dataset.src;
              if (lazyImage.dataset.srcset) {
                lazyImage.srcset = lazyImage.dataset.srcset;
              }
              lazyImage.classList.remove('lazy');
              lazyImageObserver.unobserve(lazyImage);
            }
          });
        });

        lazyImages.forEach(function(lazyImage) {
          lazyImageObserver.observe(lazyImage);
        });
      }
    });
  </script>
  
  {{ghost_foot}}
</body>
</html>
```

## Testing and Validation

Use GScan for theme validation:

```bash
# Install gscan globally
npm install -g gscan

# Validate your theme
gscan /path/to/your/theme

# Create a zip file for upload
gscan /path/to/your/theme --zip
```

## Accessibility Best Practices

Ensure proper semantic HTML structure and ARIA attributes:

```handlebars
{{!-- partials/components/pagination.hbs --}}
<nav aria-label="Pagination" class="my-8">
  <ul class="flex justify-center items-center space-x-1">
    {{#if prev}}
      <li>
        <a
          href="{{page_url prev}}"
          class="px-3 py-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
          aria-label="Previous page"
          tabindex="0"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </a>
      </li>
    {{else}}
      <li>
        <span
          class="px-3 py-2 rounded-md text-gray-400 cursor-not-allowed"
          aria-hidden="true"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </span>
      </li>
    {{/if}}
    
    <li>
      <span class="px-3 py-2 text-gray-900" aria-current="page">
        Page {{page}} of {{pages}}
      </span>
    </li>
    
    {{#if next}}
      <li>
        <a
          href="{{page_url next}}"
          class="px-3 py-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
          aria-label="Next page"
          tabindex="0"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </li>
    {{else}}
      <li>
        <span
          class="px-3 py-2 rounded-md text-gray-400 cursor-not-allowed"
          aria-hidden="true"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </span>
      </li>
    {{/if}}
  </ul>
</nav>
```

By following these patterns and best practices, you can create fast, accessible, and well-structured Ghost themes that leverage the latest frontend technologies for optimal performance and user experience.

